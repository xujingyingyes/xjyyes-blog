(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{331:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"异步加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步加载"}},[t._v("#")]),t._v(" 异步加载")]),t._v(" "),e("h2",{attrs:{id:"异步加载方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步加载方式"}},[t._v("#")]),t._v(" 异步加载方式")]),t._v(" "),e("ul",[e("li",[t._v("defer")]),t._v(" "),e("li",[t._v("async")])]),t._v(" "),e("h2",{attrs:{id:"异步加载区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步加载区别"}},[t._v("#")]),t._v(" 异步加载区别")]),t._v(" "),e("ol",[e("li",[t._v("defer 是 HTML 解析完才会执行。如果是多个，按照加载的顺序依次执行。defer 脚本会在 DOMContentLoaded 和 load 事件之前执行")]),t._v(" "),e("li",[t._v("async 会在脚本加载完之后立即执行。如果是多个，执行顺序和加载顺序无关。async 会在 load 事件之前执行，但并不能确保与 DOMContentLoaded 的执行先后顺序")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/2/171d353539501527?imageslim",alt:"异步加载脚本"}})])])}],!1,null,null,null);a.default=r.exports}}]);