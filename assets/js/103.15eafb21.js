(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{285:function(t,e,s){"use strict";s.r(e);var r=s(0),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p"),t._m(1),s("p"),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("题目真实要求是：新打开的页面 B 页面关闭（包含意外崩溃）如何回传给页面 A。")]),t._v(" "),s("p",[t._v("拆分问题：")]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("我们应该分别作答。")]),t._v(" "),t._m(5),t._v(" "),s("ol",[t._m(6),t._v(" "),s("li",[s("p",[t._v("如何传参？")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://blog.csdn.net/u013910340/article/details/90406674",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何跳转到一个已经打开的页面"),s("OutboundLink")],1)])]),t._v(" "),t._m(7)]),t._v(" "),t._m(8)]),t._v(" "),s("p",[t._v("同时，如果两个页面如果是同源的情况下，也可以通过监听 localStorage 的方式达到两个页面之间的通信。")]),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("B 页面意外崩溃，这时候 JS 线程都已经崩溃了，如何传递通知呢？")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://jasonjl.me/blog/2015/06/21/taking-action-on-browser-crashes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logging Information on Browser Crashes"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("简单来说：在网页 onload 事件设置一个 pending 状态，beforeunload 事件下改变这个状态为 exit，如果二次访问这个页面，查看这个状态，如果这个状态是 pending，则说明上一次关闭的时候是意外崩溃。这个状态可以存在 localStorage。")]),t._v(" "),s("p",[t._v("如果是想实时通知 A 页面，我们可以使用 Service Worker 来实现网页崩溃的监控。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("ol",[s("li",[t._v("网页 B 每 5s 给自己的 Service Worker 发送一次心跳，记录一个状态并更新时间戳，如果正常关闭的时候，通知 Service Worker 清除这个状态；")]),t._v(" "),s("li",[t._v("如果网页崩溃了，状态和时间戳都不会变更，Service Worker 定时轮询检查状态，一旦发现状态不对且时间戳已经很长没有更新了，则说明网页已经崩溃。")]),t._v(" "),s("li",[t._v("Service Worker 通过 postMessage 与页面进行通信（"),s("a",{attrs:{href:"https://juejin.im/post/6844903613270081543#heading-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Service Worker"),s("OutboundLink")],1),t._v("）")])]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("其中要注意的是，例如：style 属性也是一个属性集合，它的子属性并不能被监听。")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("手动对新创建的属性进行监听。")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),s("p",[t._v("利用 IntersectionObserver 接口提供的一种异步观察目标元素与其祖先元素或顶级文档视口交叉状态的方法。")])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"腾讯面试四问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#腾讯面试四问"}},[this._v("#")]),this._v(" 腾讯面试四问")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#b-页面正常关闭"}},[this._v("B 页面正常关闭")])]),e("li",[e("a",{attrs:{href:"#b-页面意外崩溃"}},[this._v("B 页面意外崩溃")])]),e("li",[e("a",{attrs:{href:"#object-defineproperty-可以监听-dom-属性吗？"}},[this._v("Object.defineProperty  可以监听 DOM 属性吗？")])]),e("li",[e("a",{attrs:{href:"#如何监听一个新创建的属性呢？"}},[this._v("如何监听一个新创建的属性呢？")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"页面通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面通信"}},[this._v("#")]),this._v(" 页面通信")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("问题一：从页面 A 打开一个新的页面 B，B 页面关闭（包括意外崩溃），如何通知页面 A？")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("B 页面正常关闭，B 页面如何通知 A 页面（涉及参数回传、参数监听）")]),this._v(" "),e("li",[this._v("B 页面意外崩溃，比如线程直接被杀死，如何通知 A 页面（涉及监听页面崩溃）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"b-页面正常关闭"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-页面正常关闭"}},[this._v("#")]),this._v(" B 页面正常关闭")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("页面关闭时会触发的事件？")]),this._v(" "),e("p",[this._v("页面关闭时会先执行 "),e("code",[this._v("window.onbeforeunload")]),this._v(" ，然后执行 "),e("code",[this._v("window.onunload")]),this._v("，我们可以在这两个事件中设置回调。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("用 "),e("code",[this._v("window.open")]),this._v(" 跳转到一个已经打开的页面，url 上面带上需要用到的参数。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("成功传参后如何监听 url 的变化？")]),t._v(" "),s("p",[t._v("如果路由是采用 hash 模式，则使用 "),s("code",[t._v("onhashchange")]),t._v(" 的方式可以监听到路由 "),s("code",[t._v("#")]),t._v(" 之后的变化，")]),t._v(" "),s("p",[t._v("如果是 history 模式，则监听 popstate 的变化")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"b-页面意外崩溃"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-页面意外崩溃"}},[this._v("#")]),this._v(" B 页面意外崩溃")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("Service Worker 有自己独立的线程，与网页区分开，网页崩溃的情况下，一般 Service Worker 并不会崩溃。")]),this._v(" "),e("li",[this._v("Service Worker 的生命周期一般比网页要长，所以可以用来监控网页的状态。")]),this._v(" "),e("li",[this._v("网页可以通过 "),e("code",[this._v("navigator.serviceWorker.controller.postMessage")]),this._v(" API 向掌管自己的 Service Worker 发送消息。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("具体是现实采用 "),e("strong",[this._v("心跳检测")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"dom-监听"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-监听"}},[this._v("#")]),this._v(" DOM 监听")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("自己如何实现 Vue 的数据监听，能够检测到 DOM 新增加绑定的属性吗？")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("知道 Vue2 原理的小伙伴应该都知道，数据双向绑定主要依赖于 "),e("code",[this._v("Object.defineProperty")]),this._v("  对数据的劫持，它有 get 和 set 方法，可以监听到对象属性的读取和设置。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"object-defineproperty-可以监听-dom-属性吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty-可以监听-dom-属性吗？"}},[this._v("#")]),this._v(" "),e("code",[this._v("Object.defineProperty")]),this._v("  可以监听 DOM 属性吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Object.defineProperty")]),this._v(" 监听的目标是对象，DOM 元素的属性集合 "),e("code",[this._v("[dom.attributes]")]),this._v(" 也是对象，当然可以被监听。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("原因是因为 "),e("code",[this._v("Object.defineProperty")]),this._v(" 的不足：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("无法监听数组的变化：数组这些方法是无法触发 set：push、pop、shift、unshift、splice、sort、reverse。Vue 中之所以能监听是因为对这些方法进行了重写（hack）。")]),this._v(" "),e("li",[this._v("只能监听属性，监听的不是对象的本身，需要对对象的每个属性进行遍历。对原本不在对象中的属性难以监听。Vue 中 使用 "),e("code",[this._v("Vue.set(object, propertyName, value)")]),this._v("  方法向嵌套对象添加响应式属性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"如何监听一个新创建的属性呢？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何监听一个新创建的属性呢？"}},[this._v("#")]),this._v(" 如何监听一个新创建的属性呢？")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("blockquote",[s("p",[t._v("Vue.set 的原理：")]),t._v(" "),s("p",[t._v("当一个数据为响应式时，vue 会给该数据添加一个 "),s("code",[t._v("__ob__")]),t._v(" 属性，因此可以通过判断 target 对象是否存在 "),s("code",[t._v("__ob__")]),t._v(" 属性来判断 target 是否是响应式数据。当 target 是非响应式数据的时候，我们就按照普通对象添加属性的方式来处理；当 target 对象是响应式数据时，我们将 target 的属性 key 也设置为响应式并手动触发通知其他属性值的更新。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"除了监听滚轮，还有什么懒加载的方法？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#除了监听滚轮，还有什么懒加载的方法？"}},[this._v("#")]),this._v(" 除了监听滚轮，还有什么懒加载的方法？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("交叉观察者")])])}],!1,null,null,null);e.default=_.exports}}]);