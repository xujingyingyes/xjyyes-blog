(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{262:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"兔展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兔展"}},[t._v("#")]),t._v(" 兔展")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#自我介绍"}},[t._v("自我介绍")])]),s("li",[s("a",{attrs:{href:"#缓存分类"}},[t._v("缓存分类")])]),s("li",[s("a",{attrs:{href:"#跨域"}},[t._v("跨域")])]),s("li",[s("a",{attrs:{href:"#前端安全和攻击"}},[t._v("前端安全和攻击")])]),s("li",[s("a",{attrs:{href:"#内容安全策略（csp）"}},[t._v("内容安全策略（CSP）")])]),s("li",[s("a",{attrs:{href:"#cookie、session｜insert（题目没听清楚）"}},[t._v("cookie、session｜insert（题目没听清楚）")])]),s("li",[s("a",{attrs:{href:"#var-let-区别"}},[t._v("var let 区别")])]),s("li",[s("a",{attrs:{href:"#有哪几种作用域"}},[t._v("有哪几种作用域")])]),s("li",[s("a",{attrs:{href:"#闭包的理解"}},[t._v("闭包的理解")])]),s("li",[s("a",{attrs:{href:"#异步的理解（事件循环）"}},[t._v("异步的理解（事件循环）")])]),s("li",[s("a",{attrs:{href:"#async-await、promise、generator-的区别"}},[t._v("async/await、Promise、generator 的区别")])]),s("li",[s("a",{attrs:{href:"#class-的理解"}},[t._v("class 的理解")])]),s("li",[s("a",{attrs:{href:"#new-的实现机制"}},[t._v("new 的实现机制")])]),s("li",[s("a",{attrs:{href:"#webpack-打包原理"}},[t._v("webpack 打包原理")])]),s("li",[s("a",{attrs:{href:"#首屏渲染优化的理解"}},[t._v("首屏渲染优化的理解")])]),s("li",[s("a",{attrs:{href:"#seo-有什么理解"}},[t._v("seo 有什么理解")])]),s("li",[s("a",{attrs:{href:"#服务端渲染的原理"}},[t._v("服务端渲染的原理")])]),s("li",[s("a",{attrs:{href:"#react-某些生命周期被废弃的理由"}},[t._v("react 某些生命周期被废弃的理由")])]),s("li",[s("a",{attrs:{href:"#fiber-reconciler-和-stack-reconciler-的区别"}},[t._v("fiber reconciler 和 stack reconciler 的区别")])]),s("li",[s("a",{attrs:{href:"#usestate-和-useref-的区别"}},[t._v("useState 和 useRef 的区别")])]),s("li",[s("a",{attrs:{href:"#hooks如何清除副作用"}},[t._v("hooks如何清除副作用")])]),s("li",[s("a",{attrs:{href:"#ts-的-type-和-interface-的区别"}},[t._v("ts 的 type 和 interface 的区别")])]),s("li",[s("a",{attrs:{href:"#fiber-架构是什么"}},[t._v("fiber 架构是什么")])]),s("li",[s("a",{attrs:{href:"#diff-算法实现思路"}},[t._v("diff 算法实现思路")])]),s("li",[s("a",{attrs:{href:"#key-在-diff-算法中的作用"}},[t._v("key 在 diff 算法中的作用")])]),s("li",[s("a",{attrs:{href:"#diff-算法时间复杂度"}},[t._v("diff 算法时间复杂度")])]),s("li",[s("a",{attrs:{href:"#diff-为什么这么高"}},[t._v("diff 为什么这么高")])]),s("li",[s("a",{attrs:{href:"#fiber-节点是一个什么数据结构"}},[t._v("fiber 节点是一个什么数据结构")])]),s("li",[s("a",{attrs:{href:"#开发组件基于什么原则"}},[t._v("开发组件基于什么原则")])]),s("li",[s("a",{attrs:{href:"#迁移-ts-的过程"}},[t._v("迁移 ts 的过程")])]),s("li",[s("a",{attrs:{href:"#迁移过程中遇到的问题"}},[t._v("迁移过程中遇到的问题")])]),s("li",[s("a",{attrs:{href:"#ts-的-type-和-interface-的区别"}},[t._v("ts 的 type 和 interface 的区别")])]),s("li",[s("a",{attrs:{href:"#ts-里面如何声明函数的重载"}},[t._v("ts 里面如何声明函数的重载")])]),s("li",[s("a",{attrs:{href:"#ts-元组和数组的区别"}},[t._v("ts 元组和数组的区别")])]),s("li",[s("a",{attrs:{href:"#ts-元组的使用场景"}},[t._v("ts 元组的使用场景")])]),s("li",[s("a",{attrs:{href:"#esm-和-cjs-的模块化的区别"}},[t._v("esm 和 cjs 的模块化的区别")])]),s("li",[s("a",{attrs:{href:"#pc-端上常见的性能优化手段"}},[t._v("pc 端上常见的性能优化手段")])]),s("li",[s("a",{attrs:{href:"#http-缓存机制"}},[t._v("HTTP 缓存机制")])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"一面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[t._v("#")]),t._v(" 一面")]),t._v(" "),s("h2",{attrs:{id:"自我介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[t._v("#")]),t._v(" 自我介绍")]),t._v(" "),s("h2",{attrs:{id:"缓存分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存分类"}},[t._v("#")]),t._v(" 缓存分类")]),t._v(" "),s("h2",{attrs:{id:"跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),s("h2",{attrs:{id:"前端安全和攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端安全和攻击"}},[t._v("#")]),t._v(" 前端安全和攻击")]),t._v(" "),s("h2",{attrs:{id:"内容安全策略（csp）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容安全策略（csp）"}},[t._v("#")]),t._v(" 内容安全策略（CSP）")]),t._v(" "),s("h2",{attrs:{id:"cookie、session｜insert（题目没听清楚）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie、session｜insert（题目没听清楚）"}},[t._v("#")]),t._v(" cookie、session｜insert（题目没听清楚）")]),t._v(" "),s("h2",{attrs:{id:"var-let-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var-let-区别"}},[t._v("#")]),t._v(" var let 区别")]),t._v(" "),s("h2",{attrs:{id:"有哪几种作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪几种作用域"}},[t._v("#")]),t._v(" 有哪几种作用域")]),t._v(" "),s("h2",{attrs:{id:"闭包的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的理解"}},[t._v("#")]),t._v(" 闭包的理解")]),t._v(" "),s("h2",{attrs:{id:"异步的理解（事件循环）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步的理解（事件循环）"}},[t._v("#")]),t._v(" 异步的理解（事件循环）")]),t._v(" "),s("h2",{attrs:{id:"async-await、promise、generator-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await、promise、generator-的区别"}},[t._v("#")]),t._v(" async/await、Promise、generator 的区别")]),t._v(" "),s("h2",{attrs:{id:"class-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-的理解"}},[t._v("#")]),t._v(" class 的理解")]),t._v(" "),s("h2",{attrs:{id:"new-的实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-的实现机制"}},[t._v("#")]),t._v(" new 的实现机制")]),t._v(" "),s("h2",{attrs:{id:"webpack-打包原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包原理"}},[t._v("#")]),t._v(" webpack 打包原理")]),t._v(" "),s("h2",{attrs:{id:"首屏渲染优化的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首屏渲染优化的理解"}},[t._v("#")]),t._v(" 首屏渲染优化的理解")]),t._v(" "),s("h2",{attrs:{id:"seo-有什么理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seo-有什么理解"}},[t._v("#")]),t._v(" seo 有什么理解")]),t._v(" "),s("h2",{attrs:{id:"服务端渲染的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染的原理"}},[t._v("#")]),t._v(" 服务端渲染的原理")]),t._v(" "),s("h2",{attrs:{id:"react-某些生命周期被废弃的理由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-某些生命周期被废弃的理由"}},[t._v("#")]),t._v(" react 某些生命周期被废弃的理由")]),t._v(" "),s("h2",{attrs:{id:"fiber-reconciler-和-stack-reconciler-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-reconciler-和-stack-reconciler-的区别"}},[t._v("#")]),t._v(" fiber reconciler 和 stack reconciler 的区别")]),t._v(" "),s("h2",{attrs:{id:"usestate-和-useref-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usestate-和-useref-的区别"}},[t._v("#")]),t._v(" useState 和 useRef 的区别")]),t._v(" "),s("h2",{attrs:{id:"hooks如何清除副作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks如何清除副作用"}},[t._v("#")]),t._v(" hooks如何清除副作用")]),t._v(" "),s("h2",{attrs:{id:"ts-的-type-和-interface-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-的-type-和-interface-的区别"}},[t._v("#")]),t._v(" ts 的 type 和 interface 的区别")]),t._v(" "),s("h1",{attrs:{id:"二面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),s("h2",{attrs:{id:"fiber-架构是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-架构是什么"}},[t._v("#")]),t._v(" fiber 架构是什么")]),t._v(" "),s("h2",{attrs:{id:"diff-算法实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法实现思路"}},[t._v("#")]),t._v(" diff 算法实现思路")]),t._v(" "),s("h2",{attrs:{id:"key-在-diff-算法中的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-在-diff-算法中的作用"}},[t._v("#")]),t._v(" key 在 diff 算法中的作用")]),t._v(" "),s("h2",{attrs:{id:"diff-算法时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法时间复杂度"}},[t._v("#")]),t._v(" diff 算法时间复杂度")]),t._v(" "),s("h2",{attrs:{id:"diff-为什么这么高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-为什么这么高"}},[t._v("#")]),t._v(" diff 为什么这么高")]),t._v(" "),s("h2",{attrs:{id:"fiber-节点是一个什么数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-节点是一个什么数据结构"}},[t._v("#")]),t._v(" fiber 节点是一个什么数据结构")]),t._v(" "),s("h2",{attrs:{id:"开发组件基于什么原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发组件基于什么原则"}},[t._v("#")]),t._v(" 开发组件基于什么原则")]),t._v(" "),s("h2",{attrs:{id:"迁移-ts-的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迁移-ts-的过程"}},[t._v("#")]),t._v(" 迁移 ts 的过程")]),t._v(" "),s("h2",{attrs:{id:"迁移过程中遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迁移过程中遇到的问题"}},[t._v("#")]),t._v(" 迁移过程中遇到的问题")]),t._v(" "),s("h2",{attrs:{id:"ts-的-type-和-interface-的区别-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-的-type-和-interface-的区别-2"}},[t._v("#")]),t._v(" ts 的 type 和 interface 的区别")]),t._v(" "),s("h2",{attrs:{id:"ts-里面如何声明函数的重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-里面如何声明函数的重载"}},[t._v("#")]),t._v(" ts 里面如何声明函数的重载")]),t._v(" "),s("h2",{attrs:{id:"ts-元组和数组的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-元组和数组的区别"}},[t._v("#")]),t._v(" ts 元组和数组的区别")]),t._v(" "),s("h2",{attrs:{id:"ts-元组的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-元组的使用场景"}},[t._v("#")]),t._v(" ts 元组的使用场景")]),t._v(" "),s("h2",{attrs:{id:"esm-和-cjs-的模块化的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#esm-和-cjs-的模块化的区别"}},[t._v("#")]),t._v(" esm 和 cjs 的模块化的区别")]),t._v(" "),s("h2",{attrs:{id:"pc-端上常见的性能优化手段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pc-端上常见的性能优化手段"}},[t._v("#")]),t._v(" pc 端上常见的性能优化手段")]),t._v(" "),s("h2",{attrs:{id:"http-缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存机制"}},[t._v("#")]),t._v(" HTTP 缓存机制")])])}],!1,null,null,null);a.default=e.exports}}]);